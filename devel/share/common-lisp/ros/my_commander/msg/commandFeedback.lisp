; Auto-generated. Do not edit!


(cl:in-package my_commander-msg)


;//! \htmlinclude commandFeedback.msg.html

(cl:defclass <commandFeedback> (roslisp-msg-protocol:ros-message)
  ((cmd_out
    :reader cmd_out
    :initarg :cmd_out
    :type cl:float
    :initform 0.0))
)

(cl:defclass commandFeedback (<commandFeedback>)
  ())

(cl:defmethod cl:initialize-instance :after ((m <commandFeedback>) cl:&rest args)
  (cl:declare (cl:ignorable args))
  (cl:unless (cl:typep m 'commandFeedback)
    (roslisp-msg-protocol:msg-deprecation-warning "using old message class name my_commander-msg:<commandFeedback> is deprecated: use my_commander-msg:commandFeedback instead.")))

(cl:ensure-generic-function 'cmd_out-val :lambda-list '(m))
(cl:defmethod cmd_out-val ((m <commandFeedback>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader my_commander-msg:cmd_out-val is deprecated.  Use my_commander-msg:cmd_out instead.")
  (cmd_out m))
(cl:defmethod roslisp-msg-protocol:serialize ((msg <commandFeedback>) ostream)
  "Serializes a message object of type '<commandFeedback>"
  (cl:let ((bits (roslisp-utils:encode-double-float-bits (cl:slot-value msg 'cmd_out))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 32) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 40) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 48) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 56) bits) ostream))
)
(cl:defmethod roslisp-msg-protocol:deserialize ((msg <commandFeedback>) istream)
  "Deserializes a message object of type '<commandFeedback>"
    (cl:let ((bits 0))
      (cl:setf (cl:ldb (cl:byte 8 0) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 32) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 40) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 48) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 56) bits) (cl:read-byte istream))
    (cl:setf (cl:slot-value msg 'cmd_out) (roslisp-utils:decode-double-float-bits bits)))
  msg
)
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql '<commandFeedback>)))
  "Returns string type for a message object of type '<commandFeedback>"
  "my_commander/commandFeedback")
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql 'commandFeedback)))
  "Returns string type for a message object of type 'commandFeedback"
  "my_commander/commandFeedback")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql '<commandFeedback>)))
  "Returns md5sum for a message object of type '<commandFeedback>"
  "0f7410aaefb32aa45c708beeb052f064")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql 'commandFeedback)))
  "Returns md5sum for a message object of type 'commandFeedback"
  "0f7410aaefb32aa45c708beeb052f064")
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql '<commandFeedback>)))
  "Returns full string definition for message of type '<commandFeedback>"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%#Feedback messages~%float64 cmd_out		#current vel_cmd output value~%~%~%~%"))
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql 'commandFeedback)))
  "Returns full string definition for message of type 'commandFeedback"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%#Feedback messages~%float64 cmd_out		#current vel_cmd output value~%~%~%~%"))
(cl:defmethod roslisp-msg-protocol:serialization-length ((msg <commandFeedback>))
  (cl:+ 0
     8
))
(cl:defmethod roslisp-msg-protocol:ros-message-to-list ((msg <commandFeedback>))
  "Converts a ROS message object to a list"
  (cl:list 'commandFeedback
    (cl:cons ':cmd_out (cmd_out msg))
))
