<?xml version="1.0" encoding="utf-8"?>
<launch>
	<param name="/UPDATE_RATE" value="50.0"/>
	<param name="/K_PHI" value="10.0"/>
	<param name="/K_DISP" value="3.0"/>
	<param name="/K_TRIP_DIST" value="1.0"/>
	<param name="/MAX_SPEED" value="0.5"/>
	<param name="/MAX_OMEGA" value="0.5"/>

	<param name="/K_PSI" value="5.0"/>
	<param name="/K_LAT_ERR_THRESH" value="3.0"/>

	<param name="/MIN_SAFE_DISTANCE" value="1.0"/>
	<param name="/DETECT_DISTANCE" value="2.5"/>
	<param name="/FRONT_ANGLE" value="0.5"/>
	<param name="/LEFT_ANGLE" value="0.5"/>
	<param name="/RIGHT_ANGLE" value="0.5"/>

	<param name="/accel_max" value="0.5"/>
	<param name="/alpha_max" value="0.2"/>
	<param name="/speed_max" value="0.5"/>
	<param name="/omega_max" value="0.5"/>

	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		<arg name="world_name" value="$(find map_drawer)/worlds/mobot_in_pen.world"/>
	</include>

	<!-- Convert xacro model file and put on parameter server -->
	<param name="robot_description" command="$(find xacro)/xacro.py '$(find mobot_urdf)/urdf/mobot_w_lidar_and_kinect.xacro'" />

	<!-- Spawn the robot from parameter server into Gazebo -->
	<node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model mobot" />

	<node pkg="tf" type="static_transform_publisher" name="kinect_broadcaster" args="0 0 0 -0.500 0.500 -0.500 0.500 kinect_link kinect_depth_frame 100" />

	<!-- start a robot_state_publisher -->
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

	<!-- launch rviz using a specific config file -->
	<node pkg="rviz" type="rviz" name="rviz" args="-d $(find map_drawer)/launch/map.rviz"/>

	<!-- launch image_view as well --> 
	<node pkg="image_view" type="image_view" name="image_view">
		<remap from="image" to="/kinect/rgb/image_raw" />
	</node>

	<!--<node name= "slam_gmapping" pkg= "gmapping" type= "slam_gmapping" output="screen" />-->
	<param name="use_sim_time" value="true"/>
	<node pkg="map_drawer" type="map_drawer" name="map_drawer" output="screen">
		<remap from="map" to="map" />
		<param name="base_frame" value="base_link"/>
		<param name="map_frame" value="map"/>
		<param name="odom_frame" value="odom"/>
		<param name="throttle_scans" value="1"/>
		<param name="map_update_interval" value="0.5"/>
		<param name="maxRange" value="60.0"/>
		<param name="maxUrange" value="40.0"/>
		<param name="minimumScore" value="0"/>
		<param name="sigma" value="0.05"/>
		<param name="kernelSize" value="1"/>
		<param name="lstep" value="0.05"/>
		<param name="astep" value="0.05"/>
		<param name="iterations" value="5"/>
		<param name="lsigma" value="0.075"/>
		<param name="ogain" value="3.0"/>
		<param name="lskip" value="0"/>
		<param name="srr" value="0.1"/>
		<param name="srt" value="0.2"/>
		<param name="str" value="0.1"/>
		<param name="stt" value="0.2"/>
		<param name="linearUpdate" value="0.25"/>
		<param name="angularUpdate" value="0.15"/>
		<param name="temporalUpdate" value="0.5"/>
		<param name="resampleThreshold" value="0.5"/>
		<param name="particles" value="30"/>
		<param name="xmin" value="-50.0"/>
		<param name="ymin" value="-50.0"/>
		<param name="xmax" value="50.0"/>
		<param name="ymax" value="50.0"/>
		<param name="delta" value="0.04"/>
		<param name="occ_thresh" value="0.25"/>
		<param name="llsamplerange" value="0.01"/>
		<param name="llsamplestep" value="0.01"/>
		<param name="lasamplerange" value="0.005"/>
		<param name="lasamplestep" value="0.005"/>
	</node>
	<node name= "trajectory_publisher" pkg= "map_drawer" type= "trajectory_publisher" args="circle_out" output="screen" />
	<node name= "range_sensor" pkg= "map_drawer" type= "range_sensor" />
	<node name= "nonlinear_controllor" pkg= "map_drawer" type= "nonlinear_controllor" output="screen"/>
</launch>