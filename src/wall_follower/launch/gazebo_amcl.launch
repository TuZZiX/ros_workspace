<?xml version="1.0" encoding="utf-8"?>
<launch>
	<param name="/UPDATE_RATE" value="50.0"/>
	<param name="/K_PHI" value="1.0"/>
	<param name="/K_DISP" value="0.5"/>
	<param name="/K_TRIP_DIST" value="0.25"/>
	<param name="/MAX_SPEED" value="0.25"/>
	<param name="/MAX_OMEGA" value="0.5"/>

	<param name="/K_PSI" value="5.0"/>
	<param name="/K_LAT_ERR_THRESH" value="3.0"/>

	<param name="/MIN_SAFE_DISTANCE" value="1.2"/>
	<param name="/DETECT_DISTANCE" value="2.5"/>
	<param name="/FRONT_ANGLE" value="0.5"/>
	<param name="/LEFT_ANGLE" value="0.5"/>
	<param name="/RIGHT_ANGLE" value="0.5"/>

	<param name="/accel_max" value="0.5"/>
	<param name="/alpha_max" value="0.2"/>
	<param name="/speed_max" value="0.25"/>
	<param name="/omega_max" value="0.5"/>

	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		<arg name="world_name" value="$(find wall_follower)/worlds/mobot_in_pen.world"/>
	</include>

	<!-- Convert xacro model file and put on parameter server -->
	<param name="robot_description" command="$(find xacro)/xacro.py '$(find mobot_urdf)/urdf/mobot_w_lidar_and_kinect.xacro'" />

	<!-- Spawn the robot from parameter server into Gazebo -->
	<node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model mobot" />

	<node pkg="tf" type="static_transform_publisher" name="kinect_broadcaster" args="0 0 0 -0.500 0.500 -0.500 0.500 kinect_link kinect_depth_frame 100" />

	<!-- start a robot_state_publisher -->
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

	<!-- launch rviz using a specific config file -->
	<node pkg="rviz" type="rviz" name="rviz" args="-d $(find wall_follower)/launch/amcl.rviz"/>

	<!-- launch image_view as well --> 
	<node pkg="image_view" type="image_view" name="image_view">
		<remap from="image" to="/kinect/rgb/image_raw" />
	</node>

	<!--<node name= "slam_gmapping" pkg= "gmapping" type= "slam_gmapping" output="screen" />-->
	<node name= "traj_publisher" pkg= "wall_follower" type= "traj_publisher" args="out" output="screen">
		<remap from="/odom" to="/amcl_odom" />
	</node>

	<node name= "wall_detector" pkg= "wall_follower" type= "wall_detector" />

	<!--<node name= "simple_controllor" pkg= "wall_follower" type= "simple_controllor" output="screen" />-->
	<!--<node name= "steering_corrector" pkg= "wall_follower" type= "steering_corrector" output="screen"/> -->
	<node name= "steering_corrector" pkg= "wall_follower" type= "steering_corrector" output="screen">
		<remap from="/odom" to="/amcl_odom" />
	</node>
	
	<node name= "map_server" pkg= "map_server" type= "map_server" args="$(find wall_follower)/map/better_pen.yaml" output="screen"/>

	<node name= "amcl_odom_tf" pkg= "wall_follower" type= "amcl_odom_tf"/>
	<node pkg="amcl" type="amcl" name="amcl" output="screen"/>
</launch>